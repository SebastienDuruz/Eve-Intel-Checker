@inject IJSRuntime JsRuntime
@inject CustomSoundPlayer SoundPlayer

<MudThemeProvider IsDarkMode="true" Theme="_mainTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div style="height:100vh; z-index: 3;">
    <div class="d-flex flex-column windowBar" style="z-index: 5;">
        <div class="d-flex justify-space-between align-center" MaxWidth="MaxWidth.ExtraExtraLarge">
            @if (WindowSpecificSuffix!.Contains("1"))
            {
                <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-left: 5px;">Eve Intel Checker</div>
                <div>
                    <MudIconButton Class="noDragContainer" HtmlTag="label" OnClick="ElectronHandler.HideAndShowSecondaryWindow" Color="@Color.Default" Icon="@Icons.Material.Rounded.OpenInNew" Size="Size.Small" Title="Show the secondary window"></MudIconButton>
                    <MudIconButton Class="noDragContainer" HtmlTag="label" OnClick="CloseApplication" Color="@Color.Error" Icon="@Icons.Material.Rounded.Close" Size="Size.Small" Title="Close the application"></MudIconButton>
                </div>
            }
            else
            {
                <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-left: 5px;">Eve Intel Checker [2]</div>
                <div>
                    <MudIconButton Class="noDragContainer" HtmlTag="label" OnClick="ElectronHandler.HideAndShowSecondaryWindow" Color="@Color.Default" Icon="@Icons.Material.Rounded.OpenInNewOff" Size="Size.Small" Title="Hide the secondary window"></MudIconButton>
                </div>
            }
        </div>
    </div>
    <div Class="d-flex flex-column topBar" style="z-index: 2">
        <div class="d-flex justify-space-between align-center" MaxWidth="MaxWidth.ExtraExtraLarge">
            <MudIconButton HtmlTag="label" Color="@FileIconColor" Icon="@Icons.Material.Rounded.FileOpen" Size="Size.Small" OnClick="OpenLogFile" Title="Select the chat log file to use"></MudIconButton>
            @if (ChatLogFile.LastLogFileMessage != "")
            {
                <MudText Typo="Typo.body2" Style="font-weight: bold; text-overflow:ellipsis;" Color="Color.Success" title="Last message read">@ChatLogFile.LastLogFileRead</MudText>
            }
            <div>
                @if (!SettingsReader!.UserSettingsValues.CompactMode)
                {
                    <MudIconButton HtmlTag="label" Icon="@Icons.Material.Rounded.AlignVerticalCenter" Size="Size.Small" OnClick="ResizeMap" Title="Resize the map to fit the window"></MudIconButton>
                }
                <MudIconButton HtmlTag="label" Icon="@Icons.Material.Rounded.Refresh" Size="Size.Small" OnClick="ResetTriggers" Title="Reset the triggers counter"></MudIconButton>
                <MudIconButton HtmlTag="label" Icon="@Icons.Material.Rounded.Settings" Size="Size.Small" Title="Open/Close Settings panel" OnClick="OpenCloseSettingsPanel"></MudIconButton>
            </div>
        </div>
        <div class="d-flex mx-1">
            <MudAutocomplete T="MapSolarSystem" @ref="SolarSystemSelector" Label="Actual position" Immediate="true" @bind-value="SelectedSystem" SelectValueOnTab="true" SelectOnClick="true" SearchFunc="@SearchSystem" ResetValueOnEmptyText="true" ToStringFunc="@(e=> e == null ? "" : $"{e.SolarSystemName}")" Dense="true" Margin="Margin.Dense" CoerceText="true" Variant="Variant.Outlined" />
        </div>
    </div>

    @if (SettingsPageOpened)
    {
        <div class="d-flex flex-column mx-2 content" style="z-index: 1">
            <MudText Typo="Typo.body2">Jumps from root : @(SettingsReader.UserSettingsValues.SystemsDepth)</MudText>
            <div class="mx-3">
                <MudSlider Size="Size.Small" Value="SettingsReader.UserSettingsValues.SystemsDepth" ValueChanged="(int x) => SystemsDepthChanged(x)" Immediate="true" Min="1" Max="10" Variant="Variant.Outlined" Step="1" Color="Color.Primary" ValueLabel="true" />
            </div>
            <MudText Typo="Typo.body2">Danger alerts : @(SettingsReader.UserSettingsValues.DangerNotification)</MudText>
            <div class="mx-3">
                <MudSlider Size="Size.Small" Value="SettingsReader.UserSettingsValues.DangerNotification" ValueChanged="(int x) => DangerNotificationChanged(x)" Immediate="true" Min="1" Max="10" Variant="Variant.Outlined" Step="1" Color="Color.Primary" ValueLabel="true" />
            </div>
            <MudText Typo="Typo.body2">Mute alerts : @(SettingsReader.UserSettingsValues.IgnoreNotification)</MudText>
            <div class="mx-3">
                <MudSlider Size="Size.Small" Value="SettingsReader.UserSettingsValues.IgnoreNotification" ValueChanged="(int x) => IgnoreNotificationChanged(x)" Immediate="true" Min="1" Max="10" Variant="Variant.Outlined" Step="1" Color="Color.Primary" ValueLabel="true" />
            </div>
            <MudText Typo="Typo.body2">Volume : @(SettingsReader.UserSettingsValues.NotificationVolume)</MudText>
            <div class="mx-3">
                <MudSlider Size="Size.Small" Value="SettingsReader.UserSettingsValues.NotificationVolume" ValueChanged="(int x) => NotificationVolumeChanged(x)" Immediate="false" Min="0" Max="100" Variant="Variant.Outlined" Step="1" Color="Color.Primary" ValueLabel="true" />
            </div>
            <div class="d-flex justify-space-between align-center align-content-center">
                <MudSwitch @bind-Value="SettingsReader!.UserSettingsValues.CompactMode" OnClick="(bool x) => CompactModeChanged(x)" Color="Color.Primary" />
                <MudText Align="Align.Center" Typo="Typo.body2">Compact mode</MudText>
            </div>
            <div class="d-flex justify-space-between align-center align-content-center">
                <MudSwitch @bind-Value="SettingsReader!.UserSettingsValues.WindowIsTopMost" OnClick="(bool x) => TopMostChanged(x)" Color="Color.Primary" />
                <MudText Align="Align.Center" Typo="Typo.body2">Always on top (restart required)</MudText>
            </div>
        </div>
    }
    else
    {
        @if (SettingsReader.UserSettingsValues.CompactMode)
        {
            @if (IntelSystems.Any())
            {
                <MudStack Spacing="0" Class="mx-2 content">
                    <div class="d-flex justify-space-around align-center flex-grow-1 gap-8" style="width: 100%;">
                        <MudText><b>J</b></MudText>
                        <MudText Class="flex-shrink-1 align-content-center align-center" Align="Align.Start" Style="width: 100%;"><b>System</b></MudText>
                        <MudText><b>T</b></MudText>
                    </div>
                    @foreach (IntelSystem system in IntelSystems)
                    {
                        string classes = ClearClasses;
                        @if (system.IsRed)
                            classes += RedClasses;
                        else if (system.TriggerCounter > 0)
                            classes += OrangeClasses;

                        string zKillboardUrl = $"https://zkillboard.com/system/{system.SystemId}";
                        string dotlanUrl = $"https://evemaps.dotlan.net/system/{system.SystemName}";

                        <div class="@classes" style="width: 100%;">
                            <MudText Typo="Typo.body2">@system.Jumps</MudText>
                            <MudMenu Dense="true" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopLeft" Style="width: 100%;">
                                <ActivatorContent>
                                    <MudText Class="flex-shrink-1 align-content-center align-center" Typo="Typo.body2" Align="Align.Justify">@system.SystemName</MudText>
                                </ActivatorContent>
                                <ChildContent>
                                    <MudMenuItem OnClick="() => OpenURL(zKillboardUrl)">ZKillboard</MudMenuItem>
                                    <MudMenuItem OnClick="() => OpenURL(dotlanUrl)">Dotlan</MudMenuItem>
                                    <MudMenuItem OnClick="() => UpdateRootSystem(system)">Set as Root</MudMenuItem>
                                </ChildContent>
                            </MudMenu>
                            <MudText Typo="Typo.body2">@system.TriggerCounter</MudText>
                        </div>
                    }
                </MudStack>
            }
        }
        <div id="canvasMap" style="overflow:hidden; position: absolute; top: 100px; right: 0; bottom: 0; left: 0;" hidden="@SettingsReader.UserSettingsValues.CompactMode"></div>
    }
</div>
